#version 460
#extension GL_GOOGLE_include_directive : enable // Include files
#extension GL_EXT_ray_tracing : enable // Raytracing

// Include structs and bindings
#include "rt_common/bindpoints.glsl"// Defines constants for the bind indices that RaytracingStage uses
#include "common/camera.glsl"// Binds camera matrices UBO
#include "rt_common/tlas.glsl"// Binds Top Level Acceleration Structure
#include "common/xteanoise.glsl"
#include "shading/constants.glsl"

#define BIND_OUT_IRRADIANCE_CACHE BIND_OUT_IMAGE
#include "irradiancecache.glsl"

const bool DEBUG_PATTERN = true;
const uint DEBUG_PATTERN_GRADIANTS = 10;

void main()
{
	const uvec3 originIrrPixel = gl_LaunchIDEXT.xyz;
	const vec3 origin = transformIrradiancePixelToWorldSpace(originIrrPixel);

	vec3 irradiance = vec3(0);

	if (DEBUG_PATTERN) {
		const uint levels = DEBUG_PATTERN_GRADIANTS;
		irradiance += vec3(float((originIrrPixel.x + originIrrPixel.y + originIrrPixel.z) % levels) / levels);
	}
	writeIrradianceCache(originIrrPixel, vec4(irradiance, 0.0));
}
